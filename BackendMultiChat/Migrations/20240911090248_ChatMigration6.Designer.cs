// <auto-generated />
using System;
using BackendMultiChat.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendMultiChat.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240911090248_ChatMigration6")]
    partial class ChatMigration6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BackendMultiChat.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ContactId"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("BackendMultiChat.Models.Conversation", b =>
                {
                    b.Property<int>("ConversationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ConversationId"));

                    b.Property<string>("ConversationName")
                        .HasColumnType("longtext");

                    b.HasKey("ConversationId");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("BackendMultiChat.Models.FileSaveInServer", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FileId"));

                    b.Property<int>("ConversationID")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("FileId");

                    b.HasIndex("ConversationID");

                    b.ToTable("FileSaveInServers");
                });

            modelBuilder.Entity("BackendMultiChat.Models.GroupMember", b =>
                {
                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<int>("ConversationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("JoinedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LeftDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ContactId", "ConversationId");

                    b.HasIndex("ConversationId");

                    b.ToTable("GroupMembers");
                });

            modelBuilder.Entity("BackendMultiChat.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<int>("ConversationId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<string>("FileUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("FromNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("SentDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("MessageId");

                    b.HasIndex("ConversationId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("BackendMultiChat.Models.FileSaveInServer", b =>
                {
                    b.HasOne("BackendMultiChat.Models.Conversation", "Conversation")
                        .WithMany("Files")
                        .HasForeignKey("ConversationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversation");
                });

            modelBuilder.Entity("BackendMultiChat.Models.GroupMember", b =>
                {
                    b.HasOne("BackendMultiChat.Models.Contact", "Contact")
                        .WithMany("GroupMembers")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendMultiChat.Models.Conversation", "Conversation")
                        .WithMany("GroupMembers")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Conversation");
                });

            modelBuilder.Entity("BackendMultiChat.Models.Message", b =>
                {
                    b.HasOne("BackendMultiChat.Models.Conversation", "Conversation")
                        .WithMany("Messages")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversation");
                });

            modelBuilder.Entity("BackendMultiChat.Models.Contact", b =>
                {
                    b.Navigation("GroupMembers");
                });

            modelBuilder.Entity("BackendMultiChat.Models.Conversation", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("GroupMembers");

                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
